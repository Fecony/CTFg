//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var HintsContent = newHintsContentTable("public", "hints_content", "")

type hintsContentTable struct {
	postgres.Table

	//Columns
	ID      postgres.ColumnString
	Content postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type HintsContentTable struct {
	hintsContentTable

	EXCLUDED hintsContentTable
}

// AS creates new HintsContentTable with assigned alias
func (a HintsContentTable) AS(alias string) *HintsContentTable {
	return newHintsContentTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new HintsContentTable with assigned schema name
func (a HintsContentTable) FromSchema(schemaName string) *HintsContentTable {
	return newHintsContentTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new HintsContentTable with assigned table prefix
func (a HintsContentTable) WithPrefix(prefix string) *HintsContentTable {
	return newHintsContentTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new HintsContentTable with assigned table suffix
func (a HintsContentTable) WithSuffix(suffix string) *HintsContentTable {
	return newHintsContentTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newHintsContentTable(schemaName, tableName, alias string) *HintsContentTable {
	return &HintsContentTable{
		hintsContentTable: newHintsContentTableImpl(schemaName, tableName, alias),
		EXCLUDED:          newHintsContentTableImpl("", "excluded", ""),
	}
}

func newHintsContentTableImpl(schemaName, tableName, alias string) hintsContentTable {
	var (
		IDColumn       = postgres.StringColumn("id")
		ContentColumn  = postgres.StringColumn("content")
		allColumns     = postgres.ColumnList{IDColumn, ContentColumn}
		mutableColumns = postgres.ColumnList{IDColumn, ContentColumn}
	)

	return hintsContentTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:      IDColumn,
		Content: ContentColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
